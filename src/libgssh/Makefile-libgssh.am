libgssh_srcdir = $(srcdir)/src/libgssh
libgssh_cflags = $(COCKPIT_WS_CFLAGS)
libgssh_libs = $(COCKPIT_WS_LIBS)

noinst_LTLIBRARIES += libgssh.la

libgssh_headers = $(addprefix $(libgssh_srcdir)/,gssh-connection.h gssh-channel.h gssh-types.h gssh.h)

libgssh_la_SOURCES = $(gssh_headers) \
	$(libgssh_srcdir)/gssh-connection.c \
	$(libgssh_srcdir)/gssh-channel.c \
	$(libgssh_srcdir)/gssh-channel-input-stream.c \
	$(libgssh_srcdir)/gssh-channel-input-stream.h \
	$(libgssh_srcdir)/gssh-channel-output-stream.h \
	$(libgssh_srcdir)/gssh-channel-output-stream.c \
	$(NULL)

libgssh_la_CFLAGS = $(AM_CFLAGS) $(libgssh_cflags) -I$(srcdir)/src/libgsystem -I$(libgssh_srcdir)
libgssh_la_LDFLAGS = -avoid-version -Bsymbolic-functions -export-symbols-regexp '^gssh_' -no-undefined -export-dynamic
libgssh_la_LIBADD = $(libgssh_libs) libgsystem.la

gssh-enum-types.h: $(libgssh_headers) $(libgssh_srcdir)/gssh-enum-types.h.template
	$(AM_V_GEN) glib-mkenums --identifier-prefix GSsh --symbol-prefix gssh --template $(filter %.template,$^) $(filter-out %.template,$^) > \
	    $@.tmp && mv $@.tmp $@

gssh-enum-types.c: $(libgssh_headers) $(libgssh_srcdir)/gssh-enum-types.c.template
	$(AM_V_GEN) glib-mkenums --identifier-prefix GSsh --symbol-prefix gssh --template $(filter %.template,$^) $(filter-out %.template,$^) > \
	    $@.tmp && mv $@.tmp $@

libgssh_la_SOURCES += gssh-enum-types.c gssh-enum-types.h
BUILT_SOURCES += gssh-enum-types.h gssh-enum-types.c
